% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generics.R, R/enum_class.R
\name{allowed}
\alias{allowed}
\alias{enum}
\alias{value<-,enum-method}
\alias{allowed,enum-method}
\title{get the value for a metric}
\usage{
allowed(obj)

enum(
  name,
  description = character(0),
  type = class(value),
  value = return[[1]],
  max_length = Inf,
  allowed = 1,
  selected = 1,
  return = allowed,
  ...
)

\S4method{value}{enum}(obj) <- value

\S4method{allowed}{enum}(obj)
}
\arguments{
\item{obj}{an enum object}

\item{name}{the name of the object}

\item{description}{a description of the object}

\item{type}{the type of the struct object}

\item{value}{value of the enum}

\item{max_length}{Maximum length of value vector (default 1)}

\item{allowed}{A list of allowed values}

\item{...}{additional inputs to the struct_class object}
}
\value{
allowed The allowed values ot be set for an enum

an enum object
}
\description{
A base class in the \pkg{struct} package. Not normally called directly.
}
\details{
An enum object is a special type of entity object that ensures the value must
be one from a list of allowed values.

Enum object also contain a "return" slot, that allows "value" to be used as a
means of indexing return values e.g. setting a value of 1 might return 'A'.
By default the return slot is equal to the allowed slot. Slot "selected"
indicates which of the allowed values was chosen to obtaint he return value.

Enum objects are usually defined in the prototype of another object, but
can be extracted using \code{param_obj} and \code{output_obj}.
}
\examples{
# Create a new enum object
E = enum(
    name = 'example',
    description = 'this is an example',
    type = 'character',
    value = 'hello',
    allowed = c('hello','world'),
)

# Get/set the value of the enum object
value(E)
value(E) = 'world'

# create an enum that returns based on index matching
E = enum(
    name = 'example',
    description = 'this is an example',
    type = 'character',
    value = 'one',
    allowed = c(1,2,3),
    return = c('one','two','three')
)

# calling value = ... searches the "allowed" slot for a matching index, 
# then uses that index to return a value from the "return" slot
value(E) = 1 # must be set using a value from the allowed list
value(E) # returns "one"
value(E) = 2
value(E) # returns "two"
E$selected # returns 2

}
